# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Create Release

on:
  pull_request:
    types: [opened, synchronize]

env:
  nodeVersion: 20
  goVersion: '1.21.3'

# Cancel in progress workflows on pull_requests. A Doppler Service Token provides read-only
# access to a single config and is recommended due to its limited access scope.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Run actions/setup-sdk@local
        uses: ./.github/setup-sdk
        with:
          nodeVersion: ${{ env.nodeVersion }}
          goVersion: ${{ env.goVersion }}

      - if: ${{ steps.pnpm-cache.outputs.cache-hit != 'true' }}
        name: Build frontend application
        run: pnpm install && pnpm build

      # This step usually is not needed because the /ui/dist is pregenerated locally
      # but its here to ensure that each release embeds the latest admin ui artifacts.
      # If the artificats differs, a "dirty error" is thrown - https://goreleaser.com/errors/dirty/
      # - name: Build Admin dashboard UI
      #   run: npm --prefix=./web ci && npm --prefix=./web run build
      # The prebuilt golangci-lint doesn't support go 1.18+ yet
      # https://github.com/golangci/golangci-lint/issues/2649
      # - name: Run linter
      #   uses: golangci/golangci-lint-action@v3
      # - name: Run tests
      #   run: go test ./...
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
